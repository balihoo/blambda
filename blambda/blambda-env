#!/bin/bash
# note that i called this 'blambda-env' rather than 'activate' so that it doesn't get confused with
# the virtualenv activate script (otherwise you would need to specify a direct path to this script)

# make sure script was sourced instead of just executed
### if [[ "$(basename "$0" 2> /dev/null)" == "blambda-env" ]]; then
###     (>&2 echo "Error: blambda-env must be sourced.")
###     exit 1
### fi
echo "Please source this file instead of running it directly!"

# make sure cmd-line arg was specified
if [[ -z $1 ]]; then
	echo "Please specify a lambda function name"
	return 1
fi

# Activate the correct base virtualenv
BLAMBDA_ENV_AND_LIB=(`blambda deps -e $1`)

if [ -n "$ZSH_VERSION" ]; then
   BLAMBDA_ENV=${BLAMBDA_ENV_AND_LIB[1]}
   BLAMBDA_NEW_LIB_PATH=${BLAMBDA_ENV_AND_LIB[2]}
elif [ -n "$BASH_VERSION" ]; then
   BLAMBDA_ENV=${BLAMBDA_ENV_AND_LIB[0]}
   BLAMBDA_NEW_LIB_PATH=${BLAMBDA_ENV_AND_LIB[1]}
fi

if [[ ${BLAMBDA_ENV} == 'blambda-3.6' ]]; then
   PYENV_PATH = '.pyenv/versions/3.6.1/lib/python3.6/'
elif [[ ${BLAMBDA_ENV} == 'blambda-3.7' ]]; then
   PYENV_PATH = '.pyenv/versions/3.7.5/lib/python3.7/'
elif [[ ${BLAMBDA_ENV} == 'blambda-3.8' ]]; then
   PYENV_PATH = '.pyenv/versions/3.8.1/lib/python3.8/'
else
	echo "blambda couldn't read the python environment from manifest, aborting!"
	return 1
fi

# todo: fix this hardcoded env
BLAMBDA_NEW_LIB_PATH=${HOME}/${PYENV_PATH}:${BLAMBDA_NEW_LIB_PATH}

echo "BLAMBDA_NEW_LIB_PATH = ${BLAMBDA_NEW_LIB_PATH}"

if [[ ${BLAMBDA_ENV} != blambda* ]]; then
	echo "blambda couldn't read the python environment from manifest, aborting!"
	return 1
fi

pyenv shell ${BLAMBDA_ENV}  # sets PYENV_VERSION
echo "Activated ${PYENV_VERSION} virtualenv"

# if BLAMBDA_LIB_PATH already exists, then remove
# it from PYTHONPATH before adding the new one
if [ -n "${BLAMBDA_LIB_PATH+1}" ]; then
    echo "Removing ${BLAMBDA_LIB_PATH} from PYTHONPATH"
	PYTHONPATH=${PYTHONPATH/${BLAMBDA_LIB_PATH}} # remove BLAMBDA_LIB_PATH from PYTHONPATH
fi

# add the new lib path
export BLAMBDA_LIB_PATH=${BLAMBDA_NEW_LIB_PATH}
PYTHONPATH=${BLAMBDA_LIB_PATH}:${PYTHONPATH}

# clean up any left over leading/trailing colons from PYTHONPATH
PYTHONPATH=${PYTHONPATH%:}
PYTHONPATH=${PYTHONPATH#:}
PYTHONPATH=${PYTHONPATH/::/:}

export PYTHONPATH=$PYTHONPATH
echo "Added ${BLAMBDA_LIB_PATH} to PYTHONPATH"

